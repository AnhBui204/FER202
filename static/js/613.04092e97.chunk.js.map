{"version":3,"file":"static/js/613.04092e97.chunk.js","mappings":"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","sources":["components/LoginForm/Login.js","components/LoginForm/Register.js","components/LoginForm/ForgotPassword.js","components/LoginForm/useFetchUsers.js","components/LoginForm/LoginForm.js"],"sourcesContent":["// Login.js\r\nimport React from \"react\";\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = ({ formValue, formError, handleChange, handleLoginSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleLoginSubmit}>\r\n      <h1>Login</h1>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"UserName\"\r\n          placeholder=\"Username\"\r\n          value={formValue.UserName}\r\n          onChange={handleChange}\r\n        />\r\n        <FaUser className=\"icon\" />\r\n        {formError.UserName && (\r\n          <div className=\"error-feedback\">{formError.UserName}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"password\"\r\n          name=\"PassWord\"\r\n          placeholder=\"Password\"\r\n          value={formValue.PassWord}\r\n          onChange={handleChange}\r\n        />\r\n        <FaLock className=\"icon\" />\r\n        {formError.PassWord && (\r\n          <div className=\"error-feedback\">{formError.PassWord}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"remember-forgot\">\r\n        <label>\r\n          <input type=\"checkbox\" />\r\n          Remember me\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Register.js\r\nimport React from \"react\";\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\n\r\nconst Register = ({\r\n  formValue,\r\n  formError,\r\n  handleChange,\r\n  handleRegisterSubmit,\r\n}) => {\r\n  return (\r\n    <div id=\"register-form\">\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleRegisterSubmit}>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"UserName\"\r\n            placeholder=\"Username\"\r\n            value={formValue.UserName}\r\n            onChange={handleChange}\r\n          />\r\n          <FaUser className=\"icon\" />\r\n          {formError.UserName && (\r\n            <div className=\"error-feedback\">{formError.UserName}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"PassWord\"\r\n            placeholder=\"Password\"\r\n            value={formValue.PassWord}\r\n            onChange={handleChange}\r\n          />\r\n          <FaLock className=\"icon\" />\r\n          {formError.PassWord && (\r\n            <div className=\"error-feedback\">{formError.PassWord}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"ConfirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            value={formValue.ConfirmPassword}\r\n            onChange={handleChange}\r\n          />\r\n          <FaLock className=\"icon\" />\r\n          {formError.ConfirmPassword && (\r\n            <div className=\"error-feedback\">{formError.ConfirmPassword}</div>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ForgotPassword = ({\r\n  handleForgotPasswordSubmit,\r\n  handleBackToLogin,\r\n  fetchUsers, // Nhận fetchUsers từ props\r\n}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleForgotPasswordSubmit(\r\n      username,\r\n      setMessage,\r\n      setError,\r\n      setIsUsernameValid\r\n    );\r\n  };\r\n\r\n  const handlePasswordUpdate = async () => {\r\n    if (!newPassword) {\r\n      setError(\"New password is required\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/users?username=${username}`\r\n      );\r\n      const users = await response.json();\r\n      const user = users[0];\r\n\r\n      if (user) {\r\n        await fetch(`http://localhost:5000/users/${user.id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ ...user, password: newPassword }),\r\n        });\r\n\r\n        setMessage(\"Password updated successfully!\");\r\n        setNewPassword(\"\");\r\n        setError(\"\");\r\n        await fetchUsers();\r\n        setTimeout(() => {\r\n          handleBackToLogin();\r\n        }, 1000);\r\n      } else {\r\n        setError(\"User not found\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"An error occurred while updating the password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Forgot Password</h1>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Enter your username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        {error && <div className=\"error-feedback\">{error}</div>}\r\n      </div>\r\n      {isUsernameValid ? (\r\n        <>\r\n          <div className=\"input-box\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              placeholder=\"Enter new password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"button\" onClick={handlePasswordUpdate}>\r\n            Update Password\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <button type=\"submit\">Submit</button>\r\n      )}\r\n      {message && <div className=\"success-feedback\">{message}</div>}\r\n      <button type=\"button\" onClick={handleBackToLogin}>\r\n        Back to Login\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","// useFetchUsers.js\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useFetchUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/users\");\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch users:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []); // Gọi fetchUsers khi component được mount\r\n\r\n  return { users, fetchUsers }; // Trả về users và hàm fetchUsers\r\n};\r\n\r\nexport default useFetchUsers;\r\n","// LoginForm.js\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./LoginForm.css\";\r\nimport backgroundImage from \"../Assets/background.png\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport ForgotPassword from \"./ForgotPassword\"; // Import the ForgotPassword component\r\nimport useFetchUsers from \"./useFetchUsers\";\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n  const navigate = useNavigate();\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    UserName: \"\",\r\n    PassWord: \"\",\r\n    ConfirmPassword: \"\",\r\n  });\r\n  const [formError, setFormError] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const { users, fetchUsers } = useFetchUsers();\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setFormValue((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const isEmptyValue = (value) => !value || value.trim().length < 1;\r\n\r\n  const validateForm = () => {\r\n    const error = {};\r\n    if (isEmptyValue(formValue.UserName)) {\r\n      error.UserName = \"UserName is required\";\r\n    }\r\n    if (isEmptyValue(formValue.PassWord)) {\r\n      error.PassWord = \"PassWord is required\";\r\n    }\r\n    if (isRegistering && isEmptyValue(formValue.ConfirmPassword)) {\r\n      error.ConfirmPassword = \"Confirm Password is required\";\r\n    }\r\n    if (isRegistering && formValue.PassWord !== formValue.ConfirmPassword) {\r\n      error.ConfirmPassword = \"Passwords do not match\";\r\n    }\r\n    setFormError(error);\r\n    return Object.keys(error).length === 0;\r\n  };\r\n\r\n  const handleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (validateForm()) {\r\n      const user = users.find(\r\n        (user) =>\r\n          user.username === formValue.UserName &&\r\n          user.password === formValue.PassWord\r\n      );\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        sessionStorage.setItem(\"role\", user.role);\r\n        if (user.role === \"admin\") {\r\n          navigate(\"/admin\");\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      } else {\r\n        setFormError({\r\n          ...formError,\r\n          UserName: \"Invalid username or password\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRegisterSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (validateForm()) {\r\n      const existingUser = users.find(\r\n        (user) => user.username === formValue.UserName\r\n      );\r\n\r\n      if (existingUser) {\r\n        setFormError((prevError) => ({\r\n          ...prevError,\r\n          UserName: \"Username already exists\",\r\n        }));\r\n        return;\r\n      }\r\n\r\n      const newUser = {\r\n        id: users.length + 1,\r\n        username: formValue.UserName,\r\n        password: formValue.PassWord,\r\n        role: \"user\",\r\n      };\r\n\r\n      await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n      fetchUsers();\r\n      setSuccessMessage(\"Registration successful! Please log in.\");\r\n      setIsRegistering(false);\r\n      navigate(\"/login\", { replace: true });\r\n    }\r\n  };\r\n\r\n  const handleForgotPasswordSubmit = async (\r\n    username,\r\n    setMessage,\r\n    setError,\r\n    setIsUsernameValid\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/users\");\r\n      const users = await response.json();\r\n      const user = users.find((user) => user.username === username);\r\n      if (user) {\r\n        setMessage(\"Please input new password.\");\r\n        setIsUsernameValid(true);\r\n      } else {\r\n        setError(\"Username not found. Please try again.\");\r\n        setIsUsernameValid(false);\r\n      }\r\n    } catch {\r\n      setError(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"login-body\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      <div className=\"wrapper\">\r\n        {successMessage && (\r\n          <div className=\"success-feedback\">{successMessage}</div>\r\n        )}\r\n        {!isRegistering && !isForgotPassword ? (\r\n          <>\r\n            <Login\r\n              formValue={formValue}\r\n              formError={formError}\r\n              handleChange={handleChange}\r\n              handleLoginSubmit={handleLoginSubmit}\r\n            />\r\n            <div className=\"register-link\">\r\n              <p>\r\n                Don't have an account?{\" \"}\r\n                <a href=\"#\" onClick={() => setIsRegistering(true)}>\r\n                  Register\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <div className=\"forgot-password-link\">\r\n              <p>\r\n                <a href=\"#\" onClick={() => setIsForgotPassword(true)}>\r\n                  Forgot Password?\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </>\r\n        ) : isForgotPassword ? (\r\n          <ForgotPassword\r\n            handleForgotPasswordSubmit={handleForgotPasswordSubmit}\r\n            handleBackToLogin={() => setIsForgotPassword(false)}\r\n            fetchUsers={fetchUsers}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Register\r\n              formValue={formValue}\r\n              formError={formError}\r\n              handleChange={handleChange}\r\n              handleRegisterSubmit={handleRegisterSubmit}\r\n            />\r\n            <div className=\"login-link\">\r\n              <p>\r\n                Already have an account?{\" \"}\r\n                <a href=\"#\" onClick={() => setIsRegistering(false)}>\r\n                  Login\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["_ref","formValue","formError","handleChange","handleLoginSubmit","_jsxs","onSubmit","children","_jsx","className","type","name","placeholder","value","UserName","onChange","FaUser","PassWord","FaLock","handleRegisterSubmit","id","ConfirmPassword","handleForgotPasswordSubmit","handleBackToLogin","fetchUsers","username","setUsername","useState","newPassword","setNewPassword","error","setError","message","setMessage","isUsernameValid","setIsUsernameValid","event","preventDefault","e","target","_Fragment","onClick","async","response","fetch","user","json","method","headers","body","JSON","stringify","password","setTimeout","useFetchUsers","users","setUsers","data","console","useEffect","setIsLoggedIn","navigate","useNavigate","isRegistering","setIsRegistering","setFormValue","setFormError","successMessage","setSuccessMessage","isForgotPassword","setIsForgotPassword","prevValue","isEmptyValue","trim","length","validateForm","Object","keys","style","backgroundImage","ForgotPassword","find","Register","prevError","newUser","role","replace","href","Login","sessionStorage","setItem"],"sourceRoot":""}