import React, { useState, useEffect, useContext } from 'react';
import { MovieContext } from './MovieContext';
import { Form, Button } from 'react-bootstrap';
import { addMovie, fetchMovies } from './MovieService';
import '../../admin.css';

const MovieForm = ({ onSave, editingMovie }) => {
  const { dispatch } = useContext(MovieContext);
  const [movie, setMovie] = useState({
    id: '',
    name: '',
    time: '',
    genres: '',
    video: '',
    category: 'homeData' // Default category
  });

  useEffect(() => {
    if (editingMovie) {
      setMovie(editingMovie);
    }
  }, [editingMovie]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { category, ...movieData } = movie;

    if (editingMovie) {
      onSave(movie); // Save edits if editing
    } else {
      try {
        // Fetch the current movies in the specified category
        const response = await fetchMovies(category);
        const maxId = response.reduce((max, item) => Math.max(max, item.id), 0);
        const newId = maxId + 1;
        const strID = "" + newId

        const newMovie = { ...movieData, id: strID };

        // Add the movie to the specified category
        const addedMovie = await addMovie(category, newMovie);
        dispatch({
          type: 'ADD_MOVIE',
          category, // Dynamic category
          payload: addedMovie,
        });
      } catch (error) {
        console.error("Error adding movie:", error);
      }
    }

    // Reset the form after submission
    setMovie({ id: '', name: '', time: '', genres: '', video: '', category: 'homeData' });
  };

  return (
    <Form onSubmit={handleSubmit} className='border-[3px] rounded-lg space-x-5 space-y-3 w-full my-5'>
      <Form.Group className='hidden'>
        {/* ID Field (Optional, as IDs are often generated by the backend) */}
      </Form.Group>
      <Form.Group className='flex flex-col'>
        <Form.Label className='font-bold text-lg'>Category</Form.Label>
        <Form.Control
          as="select"
          className='w-[98%] border border-gray-300 p-1 rounded-lg hover:border-blue-100 hover:border-[2px]'
          value={movie.category}
          onChange={(e) => setMovie({ ...movie, category: e.target.value })}
        >
          <option value="homeData">Home Data</option>
          <option value="action">Action</option>
          <option value="anime">Anime</option>
          <option value="phimviet">Phim Viet</option>
        </Form.Control>
      </Form.Group>
      <Form.Group className='flex flex-col'>
        <Form.Label className='font-bold text-lg'>Name</Form.Label>
        <Form.Control
          type="text"
          className='w-[98%] border border-gray-300 p-1 rounded-lg hover:border-blue-100 hover:border-[2px]'
          value={movie.name}
          onChange={(e) => setMovie({ ...movie, name: e.target.value })}
          required
        />
      </Form.Group>
      <Form.Group className='flex flex-col'>
        <Form.Label className='font-bold text-lg'>Duration (Time)</Form.Label>
        <Form.Control
          type="text"
          className='w-[98%] border border-gray-300 p-1 rounded-lg hover:border-blue-100 hover:border-[2px]'
          value={movie.time}
          onChange={(e) => setMovie({ ...movie, time: e.target.value })}
          required
        />
      </Form.Group>
      <Form.Group className='flex flex-col'>
        <Form.Label className='font-bold text-lg'>Genre</Form.Label>
        <Form.Control
          type="text"
          className='w-[98%] border border-gray-300 p-1 rounded-lg hover:border-blue-100 hover:border-[2px]'
          value={movie.genres}
          onChange={(e) => setMovie({ ...movie, genres: e.target.value })}
          required
        />
      </Form.Group>
      <Form.Group className='flex flex-col'>
        <Form.Label className='font-bold text-lg'>Trailer (Video URL)</Form.Label>
        <Form.Control
          type="text"
          className='w-[98%] border border-gray-300 p-1 rounded-lg hover:border-blue-100 hover:border-[2px]'
          value={movie.video}
          onChange={(e) => setMovie({ ...movie, video: e.target.value })}
          required
        />
      </Form.Group>
      <Button type="submit" style={{ marginBottom: '1rem' }} className='bg-green-500 text-white px-3 py-1 rounded-md'>
        {editingMovie ? 'Save' : 'Add Movie'}
      </Button>
    </Form>
  );
};

export default MovieForm;
